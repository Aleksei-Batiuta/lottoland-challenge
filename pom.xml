<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2022 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
  ~ either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <modules>
        <module>react-client</module>
        <module>spring-boot-server</module>
    </modules>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.4</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.batyuta.challenge</groupId>
    <artifactId>lottoland-challenge</artifactId>
    <version>0.41-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Lottoland Challenge</name>
    <description>The Test Challenge from Lottoland</description>
    <url>https://Aleksei-Batiuta.github.io/${my.artifactId}/</url>
    <contributors>
        <contributor>
            <name>Aleksei Batiuta</name>
            <email>aleksei.batiuta@gmail.com</email>
        </contributor>
    </contributors>
    <developers>
        <developer>
            <name>Aleksei Batiuta</name>
            <email>aleksei.batiuta@gmail.com</email>
        </developer>
    </developers>
    <organization>
        <name>Aleksei Batiuta</name>
        <url>https://www.batyuta.com</url>
    </organization>
    <!-- subversion version control system settings-->
    <scm>
        <connection>scm:git:https://github.com/Aleksei-Batiuta/lottoland-challenge.git</connection>
        <developerConnection>scm:git:https://github.com/Aleksei-Batiuta/lottoland-challenge.git</developerConnection>
        <url>https://github.com/Aleksei-Batiuta/lottoland-challenge.git</url>
        <tag>HEAD</tag>
    </scm>
    <!-- Deployment Settings -->
    <distributionManagement>
        <!-- Release Project Maven Repository -->
        <repository>
            <!--
            uses artifactId as ID for corresponding server settings
            in Maven settings.xml to authorization via personal credential
            -->
            <id>lottoland-challenge</id>
            <name>GitHub Aleksei-Batiuta Apache Maven Packages</name>
            <url>https://maven.pkg.github.com/Aleksei-Batiuta/lottoland-challenge</url>
        </repository>
        <!-- Project Site Path -->
        <site>
            <id>lottoland-challenge</id>
            <!-- Uses the local path to site deploy -->
            <url>file://${basedir}/docs</url>
        </site>
    </distributionManagement>
    <!-- Libs Project Maven Repository -->
    <repositories>
        <repository>
            <!--
           uses artifactId as ID for corresponding server settings
           in Maven settings.xml to authorization via personal credential
           -->
            <id>lottoland-challenge</id>
            <name>GitHub Aleksei-Batiuta Apache Maven Packages</name>
            <url>https://maven.pkg.github.com/Aleksei-Batiuta/lottoland-challenge</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <repository>
            <!--
           uses artifactId as ID for corresponding server settings
           in Maven settings.xml to authorization via personal credential
           -->
            <id>central-mirror</id>
            <name>Apache Maven Central Repository</name>
            <url>https://repo1.maven.org/maven2/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <!-- Global project properties -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <java.version>1.8</java.version>
        <my.artifactId>lottoland-challenge</my.artifactId>
        <project.scm.id>${my.artifactId}</project.scm.id>
        <site.siteDirectory>${basedir}/src/site</site.siteDirectory>
        <maven-site-plugin.version>3.7.1</maven-site-plugin.version>

        <!-- Runs all test cases -->
        <checkstyle.skip>true</checkstyle.skip>
        <maven.test.failure.ignore>false</maven.test.failure.ignore>
        <dockerhub.publish>false</dockerhub.publish>
        <!--
        The next properties should be declared in ~/.m2/settings.xml by correct values
        -->
        <dockerhub.owner>alekseibatiuta</dockerhub.owner>
        <dockerhub.password>password</dockerhub.password>
        <dockerhub.url />

        <springfox.version>3.0.0</springfox.version>
        <maven.test.skip>true</maven.test.skip>
        <spring-boot-maven-plugin.skip>true</spring-boot-maven-plugin.skip>

        <frontend-maven-plugin.version>1.9.1</frontend-maven-plugin.version>
        <frontend-maven-plugin.nodeVersion>v16.14.1</frontend-maven-plugin.nodeVersion>
        <frontend-maven-plugin.npmVersion>8.5.0</frontend-maven-plugin.npmVersion>
        <maven-project-info-reports-plugin.version>3.2.2</maven-project-info-reports-plugin.version>
        <maven-pmd-plugin.version>3.16.0</maven-pmd-plugin.version>
        <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
    </properties>

    <profiles>
        <!-- Release profile is used to release Maven goal -->
        <profile>
            <id>release</id>
            <properties>
                <dockerhub.publish>true</dockerhub.publish>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-scm-plugin</artifactId>
                            <!-- Commits the Project Site (HitHub Pages) -->
                            <configuration>
                                <message>[maven-scm-plugin] update ${project.version} GitHub Pages</message>
                                <includes>docs</includes>
                                <!-- todo: it should push after commit only! -->
                                <!--<pushChanges>true</pushChanges>-->
                            </configuration>
                        </plugin>
                        <!-- Precesses the resources -->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-resources-plugin</artifactId>
                            <version>${maven-resources-plugin.version}</version>
                            <configuration>
                                <propertiesEncoding>ISO-8859-1</propertiesEncoding>
                            </configuration>
                            <executions>
                                <!-- Copes the logo into site -->
                                <execution>
                                    <id>copy-logo</id>
                                    <phase>pre-site</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${basedir}/target/site</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${site.siteDirectory}</directory>
                                                <includes>
                                                    <include>**/${my.artifactId}.png</include>
                                                </includes>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <!-- Project site plugins-->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-site-plugin</artifactId>
                            <version>${maven-site-plugin.version}</version>
                            <!--                            <configuration>-->
                            <!--                                <siteDirectory>${site.siteDirectory}</siteDirectory>-->
                            <!--                                <outputDirectory>${project.reporting.outputDirectory}</outputDirectory>-->
                            <!--                            </configuration>-->
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <!-- Skips the checkstyle and unit tests -->
            <id>dev</id>
            <properties>
                <maven.test.skip>false</maven.test.skip>
                <checkstyle.skip>false</checkstyle.skip>
            </properties>
        </profile>
        <profile>
            <!-- Skips checkstyle for dev test -->
            <id>dev-test</id>
            <properties>
                <checkstyle.skip>true</checkstyle.skip>
            </properties>
        </profile>
    </profiles>

    <!-- Adds JUnit test results on Project Site -->
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <inherited>false</inherited>
                        <reports>
                            <report>javadoc</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <reportSets>
                    <reportSet><!-- aggregate reportSet, to define in poms having modules -->
                        <id>aggregate</id>
                        <inherited>false</inherited> <!-- don't run aggregate in child modules -->
                        <reports>
                            <report>aggregate-pmd</report>
                            <report>aggregate-cpd</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>summary</report>
                            <report>team</report>
                            <report>licenses</report>
                            <report>dependency-info</report>
                            <report>scm</report>
                            <report>distribution-management</report>
                            <report>dependency-convergence</report>
                            <!-- <report>dependency-management</report>-->
                            <report>plugins</report>
                            <report>plugin-management</report>
                            <report>modules</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>


    <!-- Dependencies Manager -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.batyuta.challenge</groupId>
                <artifactId>react-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>${springfox.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <!-- General Build Configuration -->
    <build>
        <!-- Project Plugins-->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
            </plugin>
            <!-- Java Coverage Code -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <!-- Plugin configuration -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <skip>${spring-boot-maven-plugin.skip}</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${maven-project-info-reports-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven-pmd-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>${frontend-maven-plugin.version}</version>
                </plugin>
                <!-- JUnit maven report plugin-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>3.0.0-M5</version>
                </plugin>
                <!-- Java Coverage Code -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.7</version>
                    <configuration>
                        <excludes>
                            <!--
                            The main application class will never run
                            in tests as single class.
                            -->
                            <exclude>**/Application.class</exclude>
                            <exclude>**/SignEnum$Const.class</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <!-- Check the java coverage code rate to 50%-->
                        <execution>
                            <id>jacoco-check</id>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <rule>
                                        <element>BUNDLE</element>
                                        <limits>
                                            <limit>
                                                <counter>INSTRUCTION</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>0.30</minimum>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Maven JUnit5 Test Report-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M5</version>
                    <configuration>
                        <statelessTestsetReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
                            <usePhrasedFileName>false</usePhrasedFileName>
                            <usePhrasedTestSuiteClassName>true</usePhrasedTestSuiteClassName>
                            <usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
                            <usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
                        </statelessTestsetReporter>
                        <consoleOutputReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5ConsoleOutputReporter">
                            <usePhrasedFileName>false</usePhrasedFileName>
                        </consoleOutputReporter>
                        <statelessTestsetInfoReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoReporter">
                            <usePhrasedFileName>false</usePhrasedFileName>
                            <usePhrasedClassNameInRunning>true</usePhrasedClassNameInRunning>
                            <usePhrasedClassNameInTestCaseSummary>true</usePhrasedClassNameInTestCaseSummary>
                        </statelessTestsetInfoReporter>
                    </configuration>
                </plugin>
                <!-- Validates the source code style -->
                <plugin>
                    <groupId>io.spring.javaformat</groupId>
                    <artifactId>spring-javaformat-maven-plugin</artifactId>
                    <version>0.0.31</version>
                    <executions>
                        <execution>
                            <phase>validate</phase>
                            <inherited>true</inherited>
                            <goals>
                                <goal>validate</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>3.1.2</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>8.45.1</version>
                        </dependency>
                        <dependency>
                        <groupId>io.spring.javaformat</groupId>
                        <artifactId>spring-javaformat-checkstyle</artifactId>
                        <version>0.0.31</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>google-checkstyle-validation</id>
                            <phase>validate</phase>
                            <configuration>
                                <suppressionsLocation>src/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
                                <encoding>UTF-8</encoding>
                                <sourceDirectories>${basedir}</sourceDirectories>
                                <includes>**/*</includes>
                                <excludes>**/.git/**/*,**/.idea/**/*,**/target/**/,**/*.class</excludes>
                            </configuration>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>spring-checkstyle-validation</id>
                            <phase>validate</phase>
                            <inherited>true</inherited>
                            <configuration>
                                <configLocation>io/spring/javaformat/checkstyle/checkstyle.xml</configLocation>
                                <includeTestSourceDirectory>true</includeTestSourceDirectory>
                            </configuration>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Precesses the resources -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <propertiesEncoding>ISO-8859-1</propertiesEncoding>
                    </configuration>
                    <executions>
                        <!-- Copes the logo into site -->
                        <execution>
                            <id>copy-logo</id>
                            <phase>post-site</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${basedir}/target/site/images/logos</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>${basedir}/src/site/images/logos</directory>
                                        <includes>
                                            <include>lottoland.png</include>
                                        </includes>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Compiles the code -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <compilerArgument>-Xlint:deprecation</compilerArgument>
                    </configuration>
                </plugin>
                <!-- Maven release goal -->
                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                    <configuration>
                        <!--
                        Commits the test reports before thr release:prepare goal
                        will commit pom file with a new release version
                        -->
                        <preparationGoals>-Prelease scm:remove site site-deploy scm:checkin verify spring-boot:build-image scm:remove -P
                            lottoland-challenge
                        </preparationGoals>
                    </configuration>
                </plugin>
                <!-- Project site plugins-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
